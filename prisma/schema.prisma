// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  role        Role         @default(user)
  createdAt   DateTime     @default(now()) @map("created_at")
  quizzes     Quiz[]
  leaderboard Leaderboard?

  @@map("users")
}

model Word {
  id               String     @id @default(uuid())
  word             String     @unique
  meaning          String
  definition       String
  difficulty       Difficulty
  exampleSentences Json       @map("example_sentences")
  imageUrl         String?    @map("image_url")
  videoUrl         String?    @map("video_url")

  @@map("words")
}

model Quiz {
  id              String     @id @default(uuid())
  userId          String     @map("user_id")
  user            User       @relation(fields: [userId], references: [id])
  score           Int
  difficultyLevel Difficulty @map("difficulty_level")
  createdAt       DateTime   @default(now()) @map("created_at")

  @@map("quizzes")
}

model Leaderboard {
  id         String @id @default(uuid())
  userId     String @unique @map("user_id")
  user       User   @relation(fields: [userId], references: [id])
  totalScore Int    @default(0) @map("total_score")
  rank       Int?

  @@map("leaderboard")
}

enum Role {
  user
  admin
}

enum Difficulty {
  easy
  medium
  hard
}
